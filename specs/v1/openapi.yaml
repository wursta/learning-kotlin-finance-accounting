openapi: 3.0.4
info:
  title: "Personal Financial Management Service"
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: 'Local'
tags:
  - name: Card
    description: Банковская карта
  - name: Expense
    description: Трата
paths:
  /card/create:
    post:
      tags:
        - Card
      summary: Добавление банковской карты
      operationId: cardCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreateRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardCreateResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /card/read:
    post:
      tags:
        - Card
      summary: Получение данных банковской карты
      operationId: cardRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardReadRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardReadResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /card/update:
    post:
      tags:
        - Card
      summary: Обновление данных банковской карты
      operationId: cardUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardUpdateResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /card/delete:
    post:
      tags:
        - Card
      summary: Удаление банковской карты
      operationId: cardDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDeleteRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDeleteResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /expense/create:
    post:
      tags:
        - Expense
      summary: Добавление траты
      operationId: expenseCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCreateRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCreateResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /expense/read:
    post:
      tags:
        - Expense
      summary: Получение данных траты
      operationId: expenseRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseReadRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseReadResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /expense/update:
    post:
      tags:
        - Expense
      summary: Обновление данных траты
      operationId: expenseUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseUpdateRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseUpdateResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /expense/delete:
    post:
      tags:
        - Expense
      summary: Удаление траты
      operationId: expenseDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseDeleteRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDeleteResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /expense/search:
    post:
      tags:
        - Expense
      summary: Поиск трат по фильтрам
      operationId: expenseSearch
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseSearchRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseSearchResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  /expense/stats:
    post:
      tags:
        - Expense
      summary: Поиск статистики по тратам
      operationId: expenseStats
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseStatsRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseStatsResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

components:
  schemas:
    # COMMON
    IRequest:
      type: object
      description: Мета-данные для всех запросов
      properties:
        requestType:
          type: string
          description: Поле с информацией о типе запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          cardCreate: '#/components/schemas/CardCreateRequest'
          cardRead: '#/components/schemas/CardReadRequest'
          cardUpdate: '#/components/schemas/CardUpdateRequest'
          cardDelete: '#/components/schemas/CardDeleteRequest'
          expenseCreate: '#/components/schemas/ExpenseCreateRequest'
          expenseRead: '#/components/schemas/ExpenseReadRequest'
          expenseUpdate: '#/components/schemas/ExpenseUpdateRequest'
          expenseDelete: '#/components/schemas/ExpenseDeleteRequest'
          expensesSearch: '#/components/schemas/ExpenseSearchRequest'
          expensesStats: '#/components/schemas/ExpenseStatsRequest'

    IResponse:
      type: object
      description: Мета-данные для всех ответов
      properties:
        responseType:
          type: string
          description: Поле с информацией о типе ответа
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: './schemas/ResponseResult.yaml#/ResponseResult'
        errors:
          type: array
          items:
            $ref: './schemas/ResponseError.yaml#/ResponseError'
      discriminator:
        propertyName: requestType
        mapping:
          cardCreate: '#/components/schemas/CardCreateResponse'
          cardRead: '#/components/schemas/CardReadResponse'
          cardUpdate: '#/components/schemas/CardUpdateResponse'
          cardDelete: '#/components/schemas/CardDeleteResponse'
          expenseCreate: '#/components/schemas/ExpenseCreateResponse'
          expenseRead: '#/components/schemas/ExpenseReadResponse'
          expenseUpdate: '#/components/schemas/ExpenseUpdateResponse'
          expenseDelete: '#/components/schemas/ExpenseDeleteResponse'
          expensesSearch: '#/components/schemas/ExpenseSearchResponse'
          expensesStats: '#/components/schemas/ExpenseStatsResponse'

    InternalErrorResponse:
      type: object
      description: Объект описывает свойства для внутренней ошибки сервера
      properties:
        message:
          type: string

    # CardCreate
    CardCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            card:
              $ref: './schemas/Card.yaml#/CardCreateObject'

    CardCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Card.yaml#/CardResponseSingle'

    # CardRead
    CardReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            guid:
              $ref: './schemas/Card.yaml#/CardGUID'

    CardReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Card.yaml#/CardResponseSingle'

    # CardUpdate
    CardUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            card:
              $ref: './schemas/Card.yaml#/CardObject'

    CardUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Card.yaml#/CardResponseSingle'

    # CardDelete
    CardDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            guid:
              $ref: './schemas/Card.yaml#/CardGUID'

    CardDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Card.yaml#/CardResponseSingle'

    # ExpenseCreate
    ExpenseCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            expense:
              $ref: './schemas/Expense.yaml#/ExpenseCreateObject'

    ExpenseCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Expense.yaml#/ExpenseResponseSingle'

    # ExpenseRead
    ExpenseReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            guid:
              $ref: './schemas/Expense.yaml#/ExpenseGUID'

    ExpenseReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Expense.yaml#/ExpenseResponseSingle'

    # ExpenseUpdate
    ExpenseUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            expense:
              $ref: './schemas/Expense.yaml#/ExpenseObject'

    ExpenseUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Expense.yaml#/ExpenseResponseSingle'

    # ExpenseDelete
    ExpenseDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            guid:
              $ref: './schemas/Expense.yaml#/ExpenseGUID'

    ExpenseDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Expense.yaml#/ExpenseResponseSingle'

    # ExpenseSearch
    ExpenseSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: './schemas/Expense.yaml#/ExpenseFilter'

    ExpenseSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Expense.yaml#/ExpenseResponseMulti'

    # ExpenseStats
    ExpenseStatsRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: './schemas/Expense.yaml#/ExpenseStatFilter'

    ExpenseStatsResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: './schemas/Expense.yaml#/ExpenseStat'